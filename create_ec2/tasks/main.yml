---
- name: Import SSH public key to AWS
  amazon.aws.ec2_key:
    name: "{{ ssh_key_name }}"
# TODO - fix hard coding of key name and location
    key_material: "{{ lookup('file', './vault/my_key.pub') }}"
    region: "{{ aws_region }}"
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"

- name: Create EC2 instance
  amazon.aws.ec2_instance:
    name: "{{ instance_name }}"
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    instance_type: "{{ instance_type }}"
    image_id: "{{ ami_id }}"
    region: "{{ aws_region }}"
    key_name: "{{ ssh_key_name }}"
    vpc_subnet_id: "{{ subnet_id }}"
    security_group: "{{ security_group }}"
    iam_instance_profile: "{{ iam_role_name }}"
    network:
      assign_public_ip: true
    volumes:
      - device_name: /dev/sda1
        ebs:
          volume_size: "{{ ebs_volume_size }}"
          delete_on_termination: true
    state: present
    wait: yes
  register: ec2_instance

# TODO: Getting an dict attribute error when referencing this module
#       https://docs.ansible.com/ansible/latest/collections/amazon/aws/ec2_instance_info_module.html
- name: Delay to allow for EC2 readiness
  ansible.builtin.pause:
    seconds: "{{ instance_delay_seconds }}"

- name: Display instance information
  debug:
    msg: 
      - "Instance created with ID {{ ec2_instance.instances[0].instance_id }}"
      - "Public IP: {{ ec2_instance.instances[0].public_ip_address }}"

- name: Set generated server_ip as a fact for other roles
  ansible.builtin.set_fact:
    server_ip: "{{ ec2_instance.instances[0].public_ip_address }}"
    instance_id: "{{ ec2_instance.instances[0].instance_id }}"

- name: Configure detailed monitoring for EC2 instance
  block:
    - name: Enable CloudWatch
      amazon.aws.ec2_instance:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        region: "{{ aws_region }}"
        instance_ids: ["{{ instance_id }}"]
        detailed_monitoring: "{{ 'yes' if enable_cloud_watch else 'no' }}"
        state: running
      when: enable_cloud_watch | bool

    - name: Create CloudWatch alarm for high CPU utilization
      amazon.aws.cloudwatch_metric_alarm:
        access_key: "{{ aws_access_key }}"
        secret_key: "{{ aws_secret_key }}"
        region: "{{ aws_region }}"
        state: present
        name: "high-cpu-utilization-{{ instance_id }}"
        metric: "CPUUtilization"
        namespace: "AWS/EC2"
        statistic: Average
        comparison: "GreaterThanOrEqualToThreshold"
        threshold: 80.0
# The granularity in seconds of the returned metrics
        period: 300
        evaluation_periods: 2
        unit: "Percent"
        description: "This will alarm when CPU utilization is high"
        dimensions:
          InstanceId: "{{ instance_id }}"
# TODO:        alarm_actions: ["arn:aws:sns:us-east-1:123456789012:my-topic"]
# https://docs.ansible.com/ansible/latest/collections/amazon/aws/cloudwatch_metric_alarm_module.html#requirements
      when: enable_cloud_watch | bool

    - name: Display monitoring status
      debug:
        msg: "CloudWatch monitoring is {{ 'enabled' if enable_cloud_watch else 'disabled' }} for instance {{ instance_id }}"

